test : String -> int
test "alpha" = 1
test "alphu" = 2
test "beta" = 3
test "gamma" = 4
test "delta" = 5
test "" = 6
test _ = -1

type List A = Nil | Cons A (Ptr (List A))

map : forall A B. (A -> B) -> Ptr (List A) -> Ptr (List B)
map f (Ptr Nil) = Ptr Nil
map f (Ptr (Cons x xs)) = Ptr (Cons (f x) (map f xs))

main' = map (\s. printInt (test s)) (Ptr (Cons "alpha" (Ptr (Cons "alphu" (Ptr (Cons "beta" (Ptr (Cons "gamma" (Ptr (Cons "delta" (Ptr (Cons "" (Ptr (Cons "other" (Ptr Nil)))))))))))))))
