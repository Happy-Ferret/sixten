module Sixten.Builtin exposing (..)

type unit = Unit
type pair a b = Pair a b

vector : nat -> type -> type
vector Zero _ = unit
vector (Succ n) a = pair a (vector n a)

type array a where
  Array : (n : nat) -> ptr (vector n a) -> array a

byte : type
byte = mkType 1

type string = String (array byte)

intToNat : int -> nat
intToNat 0 = Zero
intToNat n = Succ (intToNat (subInt n 1))
