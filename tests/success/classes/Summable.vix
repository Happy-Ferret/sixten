class Summable a where
  sum : a -> int

type List a
  = Nil
  | Cons a (Ptr (List a))

instance Summable int where
  sum x = x

instance forall a. Summable a => Summable (List a) where
  sum Nil = 0
  sum (Cons x xs) = addInt (sum x) (sum xs)

instance forall a. Summable a => Summable (Ptr a) where
  sum (Ptr x) = sum x

test : forall a. Summable a => a -> int
test x = sum x

test2 x = addInt (sum x) (sum x)

main = printInt (test (Ptr (Cons 1 (Ptr (Cons 2 (Ptr (Cons 3 (Ptr Nil))))))))
