deref : forall t. ptr t -> t
deref p = case p of Ptr t -> t

type list A where
  Nil : list A
  Cons : A -> ptr (list A) -> list A

test : ptr (list int)
test = Ptr (Cons 2 (Ptr (Cons 3 (Ptr (Cons 5 (Ptr Nil))))))

head : @(A : type) -> ptr (list A) -> A
head (Ptr (Cons x _)) = x
head x = head x

x = printInt (head test)
