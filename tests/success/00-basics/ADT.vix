deref : forall t. ptr t -> t
deref p = case p of Ptr t -> t

type list a = Nil | Cons a (ptr (list a))

type bool
  = False
  | True

type maybe a
  = Nothing
  | Just a

test : ptr (list int)
test = Ptr (Cons 2 (Ptr (Cons 3 (Ptr (Cons 5 (Ptr Nil))))))

sum xs = case deref xs of
  Nil -> 0
  Cons x xs -> addInt x (sum xs)

x = printInt (sum test)
