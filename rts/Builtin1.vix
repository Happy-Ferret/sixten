module Sixten.Builtin exposing (..)

type bool = False | True

abstract
unsolvedConstraint : (t : type) -> t
unsolvedConstraint t = unsolvedConstraint t

abstract
eqInt : int -> int -> bool
eqInt x y = (C|
  return $x == $y ? $True : $False;
|)

abstract
addInt : int -> int -> int
addInt x y = (C|
  return $x + $y;
|)

abstract
subInt : int -> int -> int
subInt x y = (C|
  return $x - $y;
|)

abstract
maxInt : int -> int -> int
maxInt x y = (C|
  return $x > $y ? $x : $y;
|)

abstract
printInt : int -> int
printInt x = (C|
  printf("%zd\n", $x);
  return 0;
|)

abstract
fail : (t : type) -> t
fail _ = (C|
  exit(1);
|)

abstract
sizeOf : type -> int
sizeOf t = (C| return $t; |)

abstract
mkType : int -> type
mkType i = (C| return $i; |)

abstract
productTypeRep : type -> type -> type
productTypeRep s t = mkType (addInt (sizeOf s) (sizeOf t))

abstract
sumTypeRep : type -> type -> type
sumTypeRep s t = mkType (maxInt (sizeOf s) (sizeOf t))
